<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"
[
    <!ENTITY ns_flows "http://ns.adobe.com/Flows/1.0/">
	<!ENTITY ns_svg "http://www.w3.org/2000/svg">
	<!ENTITY ns_xlink "http://www.w3.org/1999/xlink">
]>

<svg id="gene"  
xmlns="http://www.w3.org/2000/svg"
xmlns:xlink="http://www.w3.org/1999/xlink"
xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"

   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://web.resource.org/cc/"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
 

   xmlns:sodipodi="http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"


>


<script id="scrpt"  language="javascript" ><![CDATA[
var brsrici="ei"


function affichN(){
//brsrici=document.getElementById("totalsvg").getAttribute("name")
if(brsrici=="ei"){window.SVGaffichN()}else{
top.frames.Num0.frames.couches.zoom.SVGaffichN()
}
}
var strokewidthpas
var strokepas
var opacpas
function passon(a){
strokepas=a.getAttribute('stroke')
a.setAttribute('stroke','navy');
opacpas=a.getAttribute('fill-opacity')
a.setAttribute('fill-opacity','0.5')  
}
function passout(a){
a.setAttribute('fill-opacity',opacpas)
a.setAttribute('stroke',strokepas);
}
function svggeneral(){

brsrici=document.getElementById("totalsvg").getAttribute("name")
if(brsrici=="ei"){window.SVGgeneral()}else{
top.frames.Num0.frames[2].indic1()
}}
function svgdown(a){
//brsrici=document.getElementById("totalsvg").getAttribute("name")
if(brsrici=="ei"){window.SVGdown()}else{
top.frames.Num0.frames.couches.zoom.selxsvg();top.frames.Num0.frames.couches.zoom.rien();
}}
function svgclick1(){
//brsrici=document.getElementById("totalsvg").getAttribute("name")
if(brsrici=="ei"){window.SVGclick1()}else{
top.frames.Num0.frames.couches.zoom.valNoDatx(NoDatx);top.frames.Num0.frames.couches.zoom.transDATA();top.frames.Num0.frames.couches.zoom.carte()
}
}
function svgclick2(){
//brsrici=document.getElementById("totalsvg").getAttribute("name")
if(brsrici=="ei"){window.SVGclick2()}else{
top.frames.Num0.frames.couches.zoom.valNoDatx2(NoDatx);top.frames.Num0.frames.couches.zoom.transDATA();top.frames.Num0.frames.couches.zoom.carte()
}}
function svgout(){
//brsrici=document.getElementById("totalsvg").getAttribute("name")
if(brsrici=="ei"){window.SVGout()}else{
//top.frames.Num0.frames.couches.zoom0()
//<image x="10" Y="10" width="300" height="300" xlink:href="fonds france contour.jpg" ></image>
}}
]]></script>

  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
      </cc:Work>
    </rdf:RDF>
  </metadata>

<defs>
<radialGradient id="grad1" >
 <stop class="begin" offset="0" style="stop-color:#5555AA"/>
 <stop class="end" offset="1" style="stop-color:white"/>
</radialGradient>
</defs>

<g space="preserve" opacity="1" transform="matrix(0.3, 0, 0, 0.3, 0, 0)"  name="ns" id="totalsvg">






	 
	 

	
<rect y="-150" x="-150" height="800" width="800" style="fill: url(#grad1) ; fill-opacity: 1; fill-rule: evenodd; stroke: rgb(0, 0, 0); stroke-width: 0.5; stroke-linecap: butt; stroke-linejoin: miter; stroke-opacity: 1;"  transform="matrix(1, 0, 0, 1, 0, 0)" fill="#EBEFF8" id="rectmove"></rect>


<g space="preserve" opacity="1" transform="matrix(1, 0, 0, 1, -160, -15)"   id="calageAires">




<image opacity="0" href="transparent.png" height="0" width="0" y="-60" x="0" transform="matrix(1, 0, 0, 1, 0, 0)" id="imagesfond1"/>

<image opacity="0" href="transparent.png" height="0" width="0" y="-60" x="0" transform="matrix(1, 0, 0, 1, 0, 0)" id="imagesfond2"/>


<g onmouseout="javascript:passout(this)" onmouseover="javascript:passon(this)" ident="1" title="CORREZE" transform="matrix(1, 0, 0, 1, 0, 0)" stroke-miterlimit="10" stroke-linecap="butt" stroke-linejoin="miter" stroke-width="0.5" fill="#EFF2F9" stroke="#7f7f7f"  onclick="tailCarte='../358-CORREZE';parent.cartechoisie(tailCarte);parent.document.getElementById('menucartelaX').style.display='none'" style="color:blue;cursor:pointer" id="1"><path stroke-width="1" stroke="gray" id="p1" d="M 351.7970429518072 336.2565078313254 L 394.1346331325301 304.6372969879519 L 412.89179518072297 306.2450536144579 L 450.9420367469879 277.3054343373495 L 452.01387168674694 271.4103253012049 L 470.23511626506024 276.76951265060245 L 476.6661427710843 272.48216445783135 L 475.5943036144578 269.26665120481937 L 492.74370903614454 262.2997030120482 L 495.42330060240965 252.6531632530121 L 511.5008668674699 254.7968415662651 L 510.9649493975903 260.15602891566266 L 547.943351807229 271.4103253012049 L 546.3355951807229 276.233595180723 L 559.1976481927711 270.3384861445784 L 561.3413222891567 264.4433813253013 L 566.7005138554217 263.9074596385543 L 577.9548102409639 266.58705542168684 L 589.7450240963856 256.4045981927711 L 595.6401331325301 271.94624277108437 L 593.4964548192771 283.73646084337355 L 587.065428313253 284.2723783132531 L 582.242158433735 294.99075722891575 L 592.9605373493976 307.3168885542169 L 589.209106626506 346.4389692771085 L 596.1760506024096 351.79815662650606 L 588.1372674698795 357.1573439759037 L 569.3801054216867 348.0467259036145 L 564.5568355421686 345.367130120482 L 560.8054048192771 345.90304759036155 L 564.5568355421686 353.9418307228916 L 562.9490789156627 370.55531867469887 L 554.374378313253 372.69899277108436 L 531.3298680722892 402.7104512048194 L 533.4735421686747 410.21331265060246 L 538.2968120481928 415.03658253012054 L 534.5453813253012 418.7880174698796 L 526.5065981927711 437.5451753012049 L 521.683328313253 437.0092578313254 L 512.5727060240964 443.976201807229 L 520.6114891566265 458.44601271084343 L 520.075571686747 463.805201746988 L 483.0971692771084 472.9158223493977 L 481.4894126506024 472.9158223493977 L 482.0253301204819 468.6284716265061 L 475.0583861445783 465.9488771084338 L 457.373063253012 479.88276801204825 L 447.72652349397583 479.34684885542174 L 423.61017409638555 452.01498620481937 L 410.2121993975903 448.79947168674704 L 405.3889295180723 452.01498620481937 L 402.70933795180724 446.65579759036154 L 391.4550415662651 452.01498620481937 L 391.4550415662651 455.2304994578314 L 385.5599325301205 455.2304994578314 L 373.2337982530121 430.57823132530126 L 379.1289060240964 428.43455722891576 L 378.05706686746987 423.6112873493977 L 347.50969222891564 415.03658253012054 L 348.5815296987952 412.3569909638555 L 355.54847536144575 409.14147771084345 L 351.7970429518072 403.7822861445784 L 342.68642234939756 403.24636867469883 L 342.68642234939756 397.8871813253013 L 352.3329621084337 393.0639114457832 L 351.7970429518072 387.70471987951817 L 343.7582598192771 385.02512831325305 L 346.4378543373494 369.4834795180724 L 351.7970429518072 370.55531867469887 L 355.54847536144575 362.51653554216875 L 360.37174524096383 359.3010222891567 L 362.5154206024097 352.3340740963856 L 358.76398861445784 350.7263174698796 L 353.40479957831326 353.9418307228916 L 349.1174488554217 343.759373493976 L 355.01255620481925 343.759373493976 L 351.7970429518072 336.2565078313254 351.7970429518072 336.2565078313254 "></path><title>CORREZE</title></g>
<g onmouseout="javascript:passout(this)" onmouseover="javascript:passon(this)" ident="1" title="CREUSE" transform="matrix(1, 0, 0, 1, 0, 0)" stroke-miterlimit="10" stroke-linecap="butt" stroke-linejoin="miter" stroke-width="0.5" fill="#EFF2F9" stroke="#7f7f7f"   onclick="tailCarte='../358-CREUSE';parent.cartechoisie(tailCarte);parent.document.getElementById('menucartelaX').style.display='none'" style="color:blue;cursor:pointer"  id="2"><path stroke-width="1" stroke="gray" id="p2" d="M 389.847284939759 94.55709638554225 L 375.9133927710843 124.56855481927721 L 399.49382469879515 150.8285783132531 L 395.20647228915664 156.1877656626507 L 406.9966861445783 163.6906313253013 L 406.4607686746988 185.66330662650614 L 409.6762819277109 185.66330662650614 L 412.3558777108434 192.63025060240966 L 400.0297421686747 202.27679036144582 L 412.3558777108434 208.17189939759044 L 412.89179518072297 204.9563861445784 L 423.0742524096386 204.42046445783137 L 425.21793072289154 215.138843373494 L 417.71506506024093 215.67476084337352 L 418.78690421686747 224.24946566265064 L 435.4003879518072 228.53681385542174 L 445.04692771084336 226.92905722891572 L 446.6546843373494 221.56986987951814 L 449.8701975903614 221.03395240963857 L 452.01387168674694 229.60865301204822 L 470.23511626506024 239.79111024096392 L 475.5943036144578 269.26665120481937 L 492.74370903614454 262.2997030120482 L 495.42330060240965 252.6531632530121 L 511.5008668674699 254.7968415662651 L 510.9649493975903 260.15602891566266 L 547.943351807229 271.4103253012049 L 546.3355951807229 276.233595180723 L 559.1976481927711 270.3384861445784 L 561.3413222891567 264.4433813253013 L 566.7005138554217 263.9074596385543 L 577.9548102409639 266.58705542168684 L 589.7450240963856 256.4045981927711 L 568.3082704819277 232.8241662650603 L 576.3470536144579 228.00089638554223 L 600.4634030120482 209.77965602409648 L 603.6789162650603 197.45352048192774 L 611.1817777108433 193.70208975903626 L 608.5021861445783 176.55268433734943 L 604.2148337349398 171.72941445783135 L 599.3915638554217 154.5800090361446 L 602.6070771084337 145.46939096385552 L 601.5352379518073 136.89468614457837 L 596.1760506024096 135.28692951807233 L 591.3527807228916 118.13752831325309 L 584.3858367469879 110.09874518072297 L 584.9217542168675 107.95506686746995 L 551.6947825301205 88.12606987951818 L 558.6617307228915 84.9105566265061 L 556.5180524096386 80.62320421686758 L 549.0151909638554 77.94361265060252 L 546.8715126506024 67.76113855421693 L 516.8600584337349 69.90482530120488 L 514.716380120482 70.97666867469889 L 507.74943614457834 72.0485036144579 L 507.74943614457834 68.83298192771088 L 489.52819578313256 64.5456506024097 L 473.4506295180722 64.00972891566272 L 460.0526548192771 67.22521686746995 L 456.837141566265 60.258277108433845 L 447.19060180722886 59.72235542168687 L 446.6546843373494 72.58442108433746 L 442.36733192771084 76.87177349397598 L 439.1518186746988 76.87177349397598 L 434.8644704819277 69.90482530120488 L 426.82568734939764 77.94361265060252 L 420.930578313253 73.65626024096395 L 422.538334939759 68.2970602409639 L 417.1791475903615 70.44074698795191 L 407.5326078313253 76.33585602409647 L 407.5326078313253 69.36890361445785 L 403.78117289156626 67.22521686746995 L 382.88033674698795 88.12606987951818 389.847284939759 94.55709638554225 "></path><title>CREUSE</title></g>
<g onmouseout="javascript:passout(this)" onmouseover="javascript:passon(this)" ident="1" title="HAUTE-VIENNE" transform="matrix(1, 0, 0, 1, 0, 0)" stroke-miterlimit="10" stroke-linecap="butt" stroke-linejoin="miter" stroke-width="0.5" fill="#EFF2F9" stroke="#7f7f7f"   onclick="tailCarte='../358-HAUTE-VIENNE';parent.cartechoisie(tailCarte);parent.document.getElementById('menucartelaX').style.display='none'" style="color:blue;cursor:pointer"  id="3"><path id="p3" d="M 389.847284939759 94.55709638554225 L 375.9133927710843 124.56855481927721 L 399.49382469879515 150.8285783132531 L 395.20647228915664 156.1877656626507 L 406.9966861445783 163.6906313253013 L 406.4607686746988 185.66330662650614 L 409.6762819277109 185.66330662650614 L 412.3558777108434 192.63025060240966 L 400.0297421686747 202.27679036144582 L 412.3558777108434 208.17189939759044 L 412.89179518072297 204.9563861445784 L 423.0742524096386 204.42046445783137 L 425.21793072289154 215.138843373494 L 417.71506506024093 215.67476084337352 L 418.78690421686747 224.24946566265064 L 435.4003879518072 228.53681385542174 L 445.04692771084336 226.92905722891572 L 446.6546843373494 221.56986987951814 L 449.8701975903614 221.03395240963857 L 452.01387168674694 229.60865301204822 L 470.23511626506024 239.79111024096392 L 475.5943036144578 269.26665120481937 L 476.6661427710843 272.48216445783135 L 470.23511626506024 276.76951265060245 L 452.01387168674694 271.4103253012049 L 450.9420367469879 277.3054343373495 L 412.89179518072297 306.2450536144579 L 394.1346331325301 304.6372969879519 L 351.2611242168675 336.79242951807237 L 322.8574236746988 327.1458897590362 L 331.4321258373494 312.676080120482 L 321.7855862048193 306.7809710843374 L 316.4263971686747 309.9964843373495 L 306.77985740963857 298.2062704819278 L 306.2439386746988 291.77524397590366 L 277.84023855421685 291.2393222891567 L 274.6247253012048 286.95197409638564 L 269.26553795180723 298.2062704819278 L 251.58021506024096 286.4160524096386 L 257.47531987951805 274.6258385542169 L 247.29286265060242 265.5152162650603 L 234.96672710843373 266.58705542168684 L 229.07162228915664 259.08418975903624 L 245.14918855421686 244.61438012048197 L 245.6851060240964 235.50376204819284 L 256.40348493975904 237.64743614457836 L 267.1218596385542 214.6029259036145 L 266.0500246987952 202.81270783132538 L 280.5198343373494 201.20495120481934 L 292.84596692771083 193.16616807228922 L 288.0226957831325 179.76819759036152 L 267.1218596385542 168.51390120481932 L 269.80145542168674 147.61306506024107 L 273.55288614457834 144.39755180722904 L 270.33737289156625 141.71795602409645 L 266.5859421686747 120.28120240963864 L 274.0888078313253 115.99385000000012 L 285.879021686747 102.59587951807237 L 303.02842542168673 105.8113927710844 L 309.9953706626506 91.87750060240973 L 306.77985740963857 88.12606987951818 L 310.5312898192771 84.9105566265061 L 344.2941789759036 77.94361265060252 L 363.5872584939759 81.15912590361455 L 364.65909638554217 75.7999343373495 L 372.69787951807234 73.65626024096395 L 382.88033674698795 88.12606987951818 389.847284939759 94.55709638554225 "></path><title>HAUTE-VIENNE</title></g>



</g>
</g>








<script><![CDATA[


]]></script>


</svg>